name: CI

on:
  pull_request:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  # The "FORCE_COLOR" variable, when set to 1,
  # tells Nox to colorize itself.
  FORCE_COLOR: "1"

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    name: Check SDist
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: PyLint
        run: |
          echo "::add-matcher::$GITHUB_WORKSPACE/.github/matchers/pylint.json"
          pipx run nox -s pylint

  check-lite:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    name: Python ${{ matrix.python-version }} - Lite
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Requirements check
        run: python -m pip list

      - name: Test lite package
        run: pipx run nox -s lite-${{ matrix.python-version.key || matrix.python-version }} --verbose

  check-full:
    needs: [check-lite]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    name: Python ${{ matrix.python-version }} - Full
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Requirements check
        run: python -m pip list

      - name: Run doctests on Python 3.11
        if: matrix.python-version == 3.11
        run: pipx run nox -s doctests-${{ matrix.python-version.key || matrix.python-version }} --verbose

      - name: Test package and generate coverage report
        run: pipx run nox -s coverage-${{ matrix.python-version.key || matrix.python-version }} --verbose

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  discheck:
    runs-on: ubuntu-latest
    name: Disassemble check
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.8.13

      - name: Requirements check
        run: python -m pip list

      - name: Check compute features
        run: python -m pip install .[test,test-extras]

      - name: Test package
        run: python -m pytest -ra -m dis --ignore tests/test_notebooks.py

  pass:
    needs: [pre-commit, check-lite, check-full, discheck]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All jobs passed"

  # root:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Get Conda
  #     uses: conda-incubator/setup-miniconda@v2
  #     with:
  #       environment-file: environment.yml
  #       activate-environment: vector

  #   - name: Run tests
  #     shell: "bash -l {0}"
  #     run: python -m pytest tests/root_tests -ra
